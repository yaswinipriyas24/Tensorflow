# -*- coding: utf-8 -*-
"""Untitled3.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1u_9ZgOwNFdMpm3JlZSqgzrYFTka7aaeY
"""

# create a dataset
import tensorflow as tf
import numpy as np

# Input no.of hours studied
X=np.array([2,3,5,7,8],dtype=float)

# output data:Marks obtained
Y=np.array([10,15,25,35,40],dtype=float)

# Build the model
model=tf.keras.Sequential([tf.keras.layers.Dense(units=1,input_shape=[1])])

# Compile the model
model.compile(optimizer='sgd',loss='mean_squared_error')

#Train the model
history=model.fit(X,Y,epochs=500,verbose=0)

# Check the Model's Weights
weights=model.get_weights()
print("weights (slope):",weights[0])
print("Bais:",weights[1])

# Predict New Values
new_x=np.array([4,6],dtype=float)
predictions=model.predict(new_x)
print("Predicted marks:",predictions.flatten())

# Visualize the Model
import matplotlib.pyplot as plt
plt.scatter(X,Y, label="Data")
line_X=np.linspace(1,9,100)
line_Y=model.predict(line_X)
plt.plot(line_X,line_Y,color="red",label="MOdel Prediction")
plt.xlabel("Hours studied")
plt.ylabel("Marks Obtained")
plt.legend()
plt.show()